package Object_Oriented.抽象类;

/**
 * Abstract:抽象的
 *      1.可以用来修饰类、方法
 *      2.修饰类：抽象类
 *            >不可实例化(类的其它功能依然存在，成员变量、成员方法和构造方法的访问方式和普通类一样)
 *            >抽象类一定有构造器，便于子类实例化时调用
 *            >开发时，都会提供抽象类的子类，让子类对象实例化，完成相关操作
 *
 *
 *      3.修饰方:抽象方法
 *             >只有方法声明，没有方法体
 *             >包含抽象方法的类一定是个抽象类，反之抽象类中可以没有抽象方法
 *             >若 子类重写了父类中所有的抽象方法后，次子类可以实例化
 *              若 子类没有重写了父类中所有的抽象方法，则次子类也是一个抽象类，需要abstract修饰
 * 注意点：abstract不可修饰：属性、构造器
 *        不可修饰私有方法、静态方法、final方法、final类
 *
 *
 */



